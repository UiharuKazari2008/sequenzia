extends layout

block content
    if (req_uri)
        - params = new URLSearchParams(req_uri.split('?')[1])
        - path = '/' + req_uri.split('?')[0].split('/').pop()
    if (results && results.length > 0 )
        - showData = results[0].media.show.meta
        if (showData.background)
            - backgroundImg = { preview: (results[0].media.background) ? 'https://media.discordapp.net/attachments' + results[0].media.background : showData.background.pop() }
        else
            - backgroundImg = results[Math.floor(Math.random() * results.length)].entities
        // Page Heading
        style.
            .background-image:not(.overlay) {
                background-image: url("!{(backgroundImg.ext_preview) ? backgroundImg.ext_preview : backgroundImg.preview }");
            }
            .background-image.overlay {
                background-image: linear-gradient(0deg, #000000, #00000000);
                z-index: -99;
                opacity: 1;
            }
            .bottom-bar .background-image.overlay {
                background-image: linear-gradient(180deg, #000000, #00000000);
                z-index: -99;
                opacity: 1;
            }
        if (!params.has('show_id'))
            if (params.getAll('watch_history')[0] === 'none')
                - shows = [...new Set(results.map(e => e.media.show.id))].map(e => results.filter(f => f.media.season !== 0 && f.media.show.id === e))
                - shows = shows.filter(e => e.length > 0 && (!(e[0].media.season === 1 && e[0].media.episode === 1) || (e[0].media.season === 1 && e[0].media.episode === 1 && e[0].media.watched && e[0].media.watched > 0.05)))
                each show in shows
                    - showData = show[0].media.show.meta
                    if (showData.seasons)
                        - seasons = showData.seasons.filter(e => e.episodes.filter(f => !!f.entity).length > 0)
                        - banner = show.filter(e => (!e.media.watched || (e.media.watched && e.media.watched < 1)) && e.media.meta.season !== 0)
                        - banner = (banner.length > 0) ? banner : show
                        - nextEpisode = show.filter(e => !e.media.watched || (e.media.watched && e.media.watched <= .9))
                        .show-header.slim-line.mb-3.p-3
                            .show-preview(style=`background-image : url("${(show[0].media.background) ? 'https://media.discordapp.net/attachments' + show[0].media.background : showData.background.pop() }");`)
                            .show-preview-overlay
                            .show-poster.mr-1
                                img(src=`${(show[0].media.poster) ? 'https://media.discordapp.net/attachments' + show[0].media.poster : showData.poster[0]}`)
                            .show-info.px-2.d-flex.flex-column
                                .show-title
                                    if (nextEpisode[0].media.meta.name)
                                        span #{nextEpisode[0].media.meta.name}
                                    else
                                        span #{showData.name}
                                .show-info-top.d-flex.flex-row
                                .episode-number.position-absolute
                                    if (nextEpisode[0].media.meta.number)
                                        if (nextEpisode[0].media.meta.season)
                                            span #{nextEpisode[0].media.meta.season}x
                                        span #{nextEpisode[0].media.meta.number}
                                .show-description.mb-auto
                                    if (nextEpisode[0].media.meta.description)
                                        span #{nextEpisode[0].media.meta.description}
                                    else
                                        span #{showData.description}
                                .show-snacks.mt-2.d-flex
                                    if (nextEpisode.length > 0)
                                        a.btn.btn-primary.ml-auto(href='#_' onclick=`openKMSPlayer("${nextEpisode[0].id}", "${nextEpisode[0].media.show.meta.id}");`)
                                            i.fas.fa-play.pr-2
                                            | Continue Watching
                        .accordion.accordion-flush.hidden(id=`seasonsAccordion-${showData.id}`)
                            each season, seasonIndex in seasons
                                each item, indexImage in results.filter(e => e.media.show.id === showData.id && e.media.season === season.number)
                                    - fileURL = item.entities.full
                                    - previewURL = item.entities.preview;
                                    if (item.entities.download && item.entities.filename.length > 5 && (item.entities.filename.toLowerCase().includes('.mp4') || item.entities.filename.toLowerCase().includes('.mov') || item.entities.filename.toLowerCase().includes('.m4v') || item.entities.filename.toLowerCase().includes('.ts') || item.entities.filename.toLowerCase().includes('.mkv')))
                                        - fileURL = item.entities.full
                                    if (item.entities.download && !item.entities.download.includes('discordapp') && item.entities.download.split('.').pop().toLowerCase() === 'gif')
                                        - fileURL = item.entities.download
                                        - previewURL = item.entities.download
                                    - isVideo = false
                                    if (item.entities.filename.toLowerCase().endsWith('.mp4') || item.entities.filename.toLowerCase().endsWith('.mov') || item.entities.filename.toLowerCase().endsWith('.m4v') || item.entities.filename.toLowerCase().endsWith('.ts') || item.entities.filename.toLowerCase().endsWith('.mkv'))
                                        - isVideo = true
                                    div.row.m-0.flex-nowrap.flex-row.py-2.episode-row(id=`message-${item.id}` class=`${(item.media.watched && item.media.watched > 0.8) ? 'watched-episode' : ''}` data-kms-progress=`${(item.media.watched !== null) ? (item.media.watched < 0.85) ? item.media.watched : 1 : 0}` data-msg-url-extpreview=item.entities.ext_preview data-msg-isaudio=`false` data-msg-isvideo=`true` data-msg-url-preview=item.entities.preview data-msg-url-full=item.entities.full data-msg-channel-string=`${item.server.name.toUpperCase()}:/${item.channel.class}/${item.channel.name}` data-msg-server=item.server.id data-msg-channel=item.channel.id data-msg-id=item.id data-msg-eid=item.eid data-search-user=`${(item.meta.search) ? encodeURIComponent(item.meta.search) : ''}` data-search-parent=`${(item.meta.parent_search) ? encodeURIComponent(item.meta.parent_search) : ''}` data-search-color=`${(item.entities.meta.color && item.entities.meta.color.length >= 3) ? encodeURIComponent(item.entities.meta.color.join(':')) : ''}` data-nsfw-string=`${(showNSFWString) ? showNSFWString : ''}` data-search-source=`${(item.meta.urls && item.meta.urls.length > 0) ? item.meta.urls[0].split("%60").join("") : ''}` data-msg-author=`${(item.user.name) ? item.user.name : ''}` data-msg-author-img=`${(item.user.avatar) ? item.user.avatar : (item.server.icon) ? item.server.icon : ''}` data-msg-channel-icon=`${(item.channel.icon) ? item.channel.icon : ''}` data-msg-flagged=`${(item.flagged)}` data-msg-date=`${item.date.pretty}` data-msg-displayname=`${(req_uri && (req_uri.includes('displayname=*') || !req_uri.includes('displayname=')) && item.history.real_name) ? item.history.real_name : ''}` data-msg-filesize=`${(item.entities.meta.filesize) ? item.entities.meta.filesize : ''}` data-msg-permalink=`${(item.permalink) ? item.permalink : ''}` data-msg-res=`${(item.entities.meta.height) ? item.entities.meta.height + 'x' + item.entities.meta.width + ':' + item.entities.meta.ratio : ''}` data-msg-download=`${(item.entities.download && item.entities.download.length > 5) ? item.entities.download : ''}` data-msg-filecached=`${(item.meta.cached)}` data-msg-filename=`${(item.entities.filename) ? item.entities.filename : ''}` data-msg-fileid=`${(item.entities.meta.fileid && item.entities.meta.fileid.length > 2) ? item.entities.meta.fileid : ''}` data-msg-manage=`${(thisImageManage) ? 'true' : 'false'}` data-msg-bodyraw=`${(item.content.raw && item.content.raw.length > 0) ? item.content.raw.split("\n").join('<br/>') : ''}`)
                                        .episode-body
                                            .episode-number.position-absolute
                                                if (item.media.meta.number)
                                                    if (item.media.meta.season)
                                                        span #{item.media.meta.season}x
                                                    span #{item.media.meta.number}
                                            .episode-name.px-2
                                                if (item.media.meta.name)
                                                    span #{item.media.meta.name}
                                                else if (item.entities.filename)
                                                    span #{(item.entities.filename.split(" - ").length > 1) ? item.entities.filename.split(" - ")[1] : item.entities.filename}
                                            if (item.media.show.name)
                                                .series-name.px-2
                                                    span #{item.media.show.name}

            else
                each item, indexImage in results
                    - fileURL = item.entities.full
                    - previewURL = item.entities.preview;
                    if (item.entities.download && item.entities.filename.length > 5 && (item.entities.filename.toLowerCase().includes('.mp4') || item.entities.filename.toLowerCase().includes('.mov') || item.entities.filename.toLowerCase().includes('.m4v') || item.entities.filename.toLowerCase().includes('.ts') || item.entities.filename.toLowerCase().includes('.mkv')))
                        - fileURL = item.entities.full
                    if (item.entities.download && !item.entities.download.includes('discordapp') && item.entities.download.split('.').pop().toLowerCase() === 'gif')
                        - fileURL = item.entities.download
                        - previewURL = item.entities.download

                    - isVideo = false
                    if (item.entities.filename.toLowerCase().endsWith('.mp4') || item.entities.filename.toLowerCase().endsWith('.mov') || item.entities.filename.toLowerCase().endsWith('.m4v') || item.entities.filename.toLowerCase().endsWith('.ts') || item.entities.filename.toLowerCase().endsWith('.mkv'))
                        - isVideo = true

                    div.row.m-0.flex-nowrap.flex-row.py-2.episode-row(id=`message-${item.id}` data-kms-progress=`${(item.media.watched !== null) ? (item.media.watched < 0.85) ? item.media.watched : 1 : 0}` data-msg-url-extpreview=item.entities.ext_preview data-msg-isaudio=`false` data-msg-isvideo=`true` data-msg-url-preview=item.entities.preview data-msg-url-full=item.entities.full data-msg-channel-string=`${item.server.name.toUpperCase()}:/${item.channel.class}/${item.channel.name}` data-msg-server=item.server.id data-msg-channel=item.channel.id data-msg-id=item.id data-msg-eid=item.eid data-search-user=`${(item.meta.search) ? encodeURIComponent(item.meta.search) : ''}` data-search-parent=`${(item.meta.parent_search) ? encodeURIComponent(item.meta.parent_search) : ''}` data-search-color=`${(item.entities.meta.color && item.entities.meta.color.length >= 3) ? encodeURIComponent(item.entities.meta.color.join(':')) : ''}` data-nsfw-string=`${(showNSFWString) ? showNSFWString : ''}` data-search-source=`${(item.meta.urls && item.meta.urls.length > 0) ? item.meta.urls[0].split("%60").join("") : ''}` data-msg-author=`${(item.user.name) ? item.user.name : ''}` data-msg-author-img=`${(item.user.avatar) ? item.user.avatar : (item.server.icon) ? item.server.icon : ''}` data-msg-channel-icon=`${(item.channel.icon) ? item.channel.icon : ''}` data-msg-flagged=`${(item.flagged)}` data-msg-date=`${item.date.pretty}` data-msg-displayname=`${(req_uri && (req_uri.includes('displayname=*') || !req_uri.includes('displayname=')) && item.history.real_name) ? item.history.real_name : ''}` data-msg-filesize=`${(item.entities.meta.filesize) ? item.entities.meta.filesize : ''}` data-msg-permalink=`${(item.permalink) ? item.permalink : ''}` data-msg-res=`${(item.entities.meta.height) ? item.entities.meta.height + 'x' + item.entities.meta.width + ':' + item.entities.meta.ratio : ''}` data-msg-download=`${(item.entities.download && item.entities.download.length > 5) ? item.entities.download : ''}` data-msg-filecached=`${(item.meta.cached)}` data-msg-filename=`${(item.entities.filename) ? item.entities.filename : ''}` data-msg-fileid=`${(item.entities.meta.fileid && item.entities.meta.fileid.length > 2) ? item.entities.meta.fileid : ''}` data-msg-manage=`${(thisImageManage) ? 'true' : 'false'}` data-msg-bodyraw=`${(item.content.raw && item.content.raw.length > 0) ? item.content.raw.split("\n").join('<br/>') : ''}`)
                        .episode-preview
                            .preview-watched.d-flex
                                .watched-precent.mt-auto(style=`width: ${(item.media.watched !== null) ? item.media.watched * 100 : 0}%`)
                            .preview-controls.d-flex
                                .play-icon.mt-auto.mb-auto.mr-auto.ml-auto.shadow-text
                                    i.fas.fa-play
                            a(href='#_' onclick=`openKMSPlayer("${item.id}", "${item.media.show.meta.id}"); return false;`)
                                #postImage.episode-preview-image(style=`background-image : url(${(item.entities.ext_preview) ? item.entities.ext_preview : item.entities.full});`)
                        .episode-body
                            .episode-number.position-absolute
                                if (item.media.meta.number)
                                    if (item.media.meta.season)
                                        span #{item.media.meta.season}x
                                    span #{item.media.meta.number}
                            .episode-name.px-2
                                if (item.media.meta.name)
                                    span #{item.media.meta.name}
                                else if (item.entities.filename)
                                    span #{(item.entities.filename.split(" - ").length > 1) ? item.entities.filename.split(" - ")[1] : item.entities.filename}
                            if (item.media.show.name)
                                .series-name.px-2
                                    span #{item.media.show.name}
                            .episode-controls.px-2.pt-2
                                if (user && user.source < 900)
                                    a.btn.btn-links.no-dynamic-tiny(data-placement="top" id='fav-' + item.eid title="Toggle Favorite" href='#_' onclick=`toggleFavorite("${item.channel.id}", "${item.eid}"); return false;`)
                                        i.btn-links.fas.fa-star(class=`${(item.pinned) ? 'favorited' : ''}`)
                                a.btn.btn-links.no-dynamic-tiny(data-placement="top" title=`Add or Remove from Album` href='#_' onclick=`refreshAlbumsList("${item.eid}"); return false;`)
                                    i.btn-links.fas.fa-archive
                                a.btn.btn-links.goto-link(data-placement="top" title=`Search content related to this image` href='#_' onClick=`showSearchOptions('${item.id}', ${(thisImageManage && user && user.source < 900)}); return false;`)
                                    i.btn-links.fas.fa-info-circle
                                if (item.media.show && item.media.show.id)
                                    a.btn.btn-links.goto-link(data-placement="top" title=`Go to Show` href=`#/listTheater?show_id=${item.media.show.id}`)
                                        i.btn-links.fas.fa-arrow-right
                                if (item.media.watched)
                                    a.btn.btn-links.goto-link(data-placement="top" title=`Mark as watched` href='#_' onClick=`setWatchHistory('${item.eid}', 0); return false;`)
                                        i.btn-links.fas.fa-eye-slash
                                else
                                    a.btn.btn-links.goto-link(data-placement="top" title=`Mark as watched` href='#_' onClick=`setWatchHistory('${item.eid}', 1); return false;`)
                                        i.btn-links.fas.fa-check
        else if (showData.seasons)
            - seasons = showData.seasons.filter(e => e.episodes.filter(f => !!f.entity).length > 0)
            - banner = results.filter(e => (!e.media.watched || (e.media.watched && e.media.watched < 1)) && e.media.meta.season !== 0)
            - banner = (banner.length > 0) ? banner : results
            - nextEpisode = results.filter(e => e.media.meta.season !== 0 && (!e.media.watched || (e.media.watched && e.media.watched <= .85)))
            .show-header.mb-3.p-3
                .show-preview(style=`background-image : url("${banner[0].entities.preview}");`)
                .show-preview-overlay
                .show-poster.mr-1
                    img(src=`${(results[0].media.poster) ? 'https://media.discordapp.net/attachments' + results[0].media.poster : showData.poster[0]}`)
                .show-info.px-2.d-flex.flex-column
                    .show-title
                        span #{showData.name}
                    .show-og-title
                        span #{showData.originalName}
                    .show-info-top.d-flex.flex-row
                        .show-tags.mr-auto
                            if (showData.genres)
                                each genera in showData.genres
                                    span.badge.badge-light.mr-1
                                        | #{genera}
                        if (showData.date)
                            .show-date.mt-2
                                span #{showData.date.split('-')[0]}
                    .show-description.mb-auto
                        span #{showData.description}
                    .show-snacks.mt-2.d-flex
                        if (nextEpisode.length > 0)
                            a.btn.btn-primary.ml-auto(href='#_' onclick=`openKMSPlayer("${nextEpisode[0].id}", "${nextEpisode[0].media.show.meta.id}");`)
                                i.fas.fa-play.pr-2
                                if (nextEpisode[0].media.meta.number === 1 && nextEpisode[0].media.meta.season === 1)
                                    | Start Watching
                                else
                                    | Continue Watching
            .accordion.accordion-flush(id=`seasonsAccordion-${showData.id}`)
                each season, seasonIndex in seasons
                    .accordion-item
                        if (seasons.length > 1)
                            h2.accordion-header
                                a.accordion-button.collapsed(href='#_' data-toggle='collapse' data-target=`#seasonBody${seasonIndex}`)
                                    i.fas.fa-rectangle-list.pr-2
                                    if (season.number !== 0)
                                        if (`Season ${season.number}`.toLowerCase() !== season.name.toLowerCase())
                                            | Season #{season.number} (#{season.name})
                                        else
                                            | #{season.name}
                                    else
                                        | Special Features
                        .accordion-collapse.collapse(id=`seasonBody${seasonIndex}` class=`${(seasons.length === 1 || (season.number !== 0 && results.filter(e => e.media.season === season.number && !(e.media.watched && e.media.watched > 0.8)).length > 0)) ? 'show' : ''}`)
                            .accordion-body
                                each item, indexImage in results.filter(e => e.media.season === season.number)
                                    - fileURL = item.entities.full
                                    - previewURL = item.entities.preview;
                                    if (item.entities.download && item.entities.filename.length > 5 && (item.entities.filename.toLowerCase().includes('.mp4') || item.entities.filename.toLowerCase().includes('.mov') || item.entities.filename.toLowerCase().includes('.m4v') || item.entities.filename.toLowerCase().includes('.ts') || item.entities.filename.toLowerCase().includes('.mkv')))
                                        - fileURL = item.entities.full
                                    if (item.entities.download && !item.entities.download.includes('discordapp') && item.entities.download.split('.').pop().toLowerCase() === 'gif')
                                        - fileURL = item.entities.download
                                        - previewURL = item.entities.download

                                    - isVideo = false
                                    if (item.entities.filename.toLowerCase().endsWith('.mp4') || item.entities.filename.toLowerCase().endsWith('.mov') || item.entities.filename.toLowerCase().endsWith('.m4v') || item.entities.filename.toLowerCase().endsWith('.ts') || item.entities.filename.toLowerCase().endsWith('.mkv'))
                                        - isVideo = true

                                    div.row.m-0.flex-nowrap.flex-row.py-2.episode-row(id=`message-${item.id}` class=`${(item.media.watched && item.media.watched > 0.8) ? 'watched-episode' : ''}` data-kms-progress=`${(item.media.watched !== null) ? (item.media.watched < 0.85) ? item.media.watched : 1 : 0}` data-msg-url-extpreview=item.entities.ext_preview data-msg-isaudio=`false` data-msg-isvideo=`true` data-msg-url-preview=item.entities.preview data-msg-url-full=item.entities.full data-msg-channel-string=`${item.server.name.toUpperCase()}:/${item.channel.class}/${item.channel.name}` data-msg-server=item.server.id data-msg-channel=item.channel.id data-msg-id=item.id data-msg-eid=item.eid data-search-user=`${(item.meta.search) ? encodeURIComponent(item.meta.search) : ''}` data-search-parent=`${(item.meta.parent_search) ? encodeURIComponent(item.meta.parent_search) : ''}` data-search-color=`${(item.entities.meta.color && item.entities.meta.color.length >= 3) ? encodeURIComponent(item.entities.meta.color.join(':')) : ''}` data-nsfw-string=`${(showNSFWString) ? showNSFWString : ''}` data-search-source=`${(item.meta.urls && item.meta.urls.length > 0) ? item.meta.urls[0].split("%60").join("") : ''}` data-msg-author=`${(item.user.name) ? item.user.name : ''}` data-msg-author-img=`${(item.user.avatar) ? item.user.avatar : (item.server.icon) ? item.server.icon : ''}` data-msg-channel-icon=`${(item.channel.icon) ? item.channel.icon : ''}` data-msg-flagged=`${(item.flagged)}` data-msg-date=`${item.date.pretty}` data-msg-displayname=`${(req_uri && (req_uri.includes('displayname=*') || !req_uri.includes('displayname=')) && item.history.real_name) ? item.history.real_name : ''}` data-msg-filesize=`${(item.entities.meta.filesize) ? item.entities.meta.filesize : ''}` data-msg-permalink=`${(item.permalink) ? item.permalink : ''}` data-msg-res=`${(item.entities.meta.height) ? item.entities.meta.height + 'x' + item.entities.meta.width + ':' + item.entities.meta.ratio : ''}` data-msg-download=`${(item.entities.download && item.entities.download.length > 5) ? item.entities.download : ''}` data-msg-filecached=`${(item.meta.cached)}` data-msg-filename=`${(item.entities.filename) ? item.entities.filename : ''}` data-msg-fileid=`${(item.entities.meta.fileid && item.entities.meta.fileid.length > 2) ? item.entities.meta.fileid : ''}` data-msg-manage=`${(thisImageManage) ? 'true' : 'false'}` data-msg-bodyraw=`${(item.content.raw && item.content.raw.length > 0) ? item.content.raw.split("\n").join('<br/>') : ''}`)
                                        .episode-preview
                                            .preview-watched.d-flex
                                                .watched-precent.mt-auto(style=`width: ${(item.media.watched !== null) ? item.media.watched * 100 : 0}%`)
                                            .preview-controls.d-flex
                                                .play-icon.mt-auto.mb-auto.mr-auto.ml-auto.shadow-text
                                                    i.fas.fa-play
                                            a(href='#_' onclick=`openKMSPlayer("${item.id}", "${item.media.show.meta.id}"); return false;`)
                                                #postImage.episode-preview-image(style=`background-image : url(${(item.entities.ext_preview) ? item.entities.ext_preview : item.entities.full});`)
                                        .episode-body
                                            .episode-number.position-absolute
                                                span #{item.media.meta.number}
                                            .episode-name.px-2
                                                if (item.media.meta.name)
                                                    span #{item.media.meta.name}
                                            .episode-description.px-2
                                                span #{item.media.meta.description}
                                            .episode-controls.px-2.pt-2
                                                if (user && user.source < 900)
                                                    a.btn.btn-links.no-dynamic-tiny(data-placement="top" id='fav-' + item.eid title="Toggle Favorite" href='#_' onclick=`toggleFavorite("${item.channel.id}", "${item.eid}"); return false;`)
                                                        i.btn-links.fas.fa-star(class=`${(item.pinned) ? 'favorited' : ''}`)
                                                a.btn.btn-links.no-dynamic-tiny(data-placement="top" title=`Add or Remove from Album` href='#_' onclick=`refreshAlbumsList("${item.eid}"); return false;`)
                                                    i.btn-links.fas.fa-archive
                                                a.btn.btn-links.goto-link(data-placement="top" title=`Search content related to this image` href='#_' onClick=`showSearchOptions('${item.id}', ${(thisImageManage && user && user.source < 900)}); return false;`)
                                                    i.btn-links.fas.fa-info-circle
                                                if (item.media.watched)
                                                    a.btn.btn-links.goto-link(data-placement="top" title=`Mark as watched` href='#_' onClick=`setWatchHistory('${item.eid}', 0); return false;`)
                                                        i.btn-links.fas.fa-eye-slash
                                                else
                                                    a.btn.btn-links.goto-link(data-placement="top" title=`Mark as watched` href='#_' onClick=`setWatchHistory('${item.eid}', 1); return false;`)
                                                        i.btn-links.fas.fa-check
        else
            .show-header.mb-3.p-3
                .show-preview(style=`background-image : url("${results[0].entities.preview}");`)
                .show-preview-overlay
                .show-poster.mr-1
                    img(src=`${(results[0].media.poster) ? 'https://media.discordapp.net/attachments' + results[0].media.poster : showData.poster[0]}`)
                .show-info.px-2
                    .show-title
                        span #{showData.name}
                    .show-og-title
                        span #{showData.originalName}
                    .show-info-top.d-flex.flex-row
                        .show-tags.mr-auto
                            if (showData.genres)
                                each genera in showData.genres
                                    span.badge.badge-light.mr-1
                                        | #{genera}
                        if (showData.date)
                            .show-date.mt-2
                                span #{showData.date.split('-')[0]}
                    .show-description
                        span #{showData.description}
            .accordion-body(id=`seasonsAccordion-${showData.id}`)
                each item, indexImage in results
                    - fileURL = item.entities.full
                    - previewURL = item.entities.preview;
                    if (item.entities.download && item.entities.filename.length > 5 && (item.entities.filename.toLowerCase().includes('.mp4') || item.entities.filename.toLowerCase().includes('.mov') || item.entities.filename.toLowerCase().includes('.m4v') || item.entities.filename.toLowerCase().includes('.ts') || item.entities.filename.toLowerCase().includes('.mkv')))
                        - fileURL = item.entities.full
                    if (item.entities.download && !item.entities.download.includes('discordapp') && item.entities.download.split('.').pop().toLowerCase() === 'gif')
                        - fileURL = item.entities.download
                        - previewURL = item.entities.download

                    - isVideo = false
                    if (item.entities.filename.toLowerCase().endsWith('.mp4') || item.entities.filename.toLowerCase().endsWith('.mov') || item.entities.filename.toLowerCase().endsWith('.m4v') || item.entities.filename.toLowerCase().endsWith('.ts') || item.entities.filename.toLowerCase().endsWith('.mkv'))
                        - isVideo = true

                    div.row.m-0.flex-nowrap.flex-row.py-2.episode-row(id=`message-${item.id}` class=`${(item.media.watched && item.media.watched > 0.8) ? 'watched-episode' : ''}` data-kms-progress=`${(item.media.watched !== null) ? (item.media.watched < 0.85) ? item.media.watched : 1 : 0}` data-msg-url-extpreview=item.entities.ext_preview data-msg-isaudio=`false` data-msg-isvideo=`true` data-msg-url-preview=item.entities.preview data-msg-url-full=item.entities.full data-msg-channel-string=`${item.server.name.toUpperCase()}:/${item.channel.class}/${item.channel.name}` data-msg-server=item.server.id data-msg-channel=item.channel.id data-msg-id=item.id data-msg-eid=item.eid data-search-user=`${(item.meta.search) ? encodeURIComponent(item.meta.search) : ''}` data-search-parent=`${(item.meta.parent_search) ? encodeURIComponent(item.meta.parent_search) : ''}` data-search-color=`${(item.entities.meta.color && item.entities.meta.color.length >= 3) ? encodeURIComponent(item.entities.meta.color.join(':')) : ''}` data-nsfw-string=`${(showNSFWString) ? showNSFWString : ''}` data-search-source=`${(item.meta.urls && item.meta.urls.length > 0) ? item.meta.urls[0].split("%60").join("") : ''}` data-msg-author=`${(item.user.name) ? item.user.name : ''}` data-msg-author-img=`${(item.user.avatar) ? item.user.avatar : (item.server.icon) ? item.server.icon : ''}` data-msg-channel-icon=`${(item.channel.icon) ? item.channel.icon : ''}` data-msg-flagged=`${(item.flagged)}` data-msg-date=`${item.date.pretty}` data-msg-displayname=`${(req_uri && (req_uri.includes('displayname=*') || !req_uri.includes('displayname=')) && item.history.real_name) ? item.history.real_name : ''}` data-msg-filesize=`${(item.entities.meta.filesize) ? item.entities.meta.filesize : ''}` data-msg-permalink=`${(item.permalink) ? item.permalink : ''}` data-msg-res=`${(item.entities.meta.height) ? item.entities.meta.height + 'x' + item.entities.meta.width + ':' + item.entities.meta.ratio : ''}` data-msg-download=`${(item.entities.download && item.entities.download.length > 5) ? item.entities.download : ''}` data-msg-filecached=`${(item.meta.cached)}` data-msg-filename=`${(item.entities.filename) ? item.entities.filename : ''}` data-msg-fileid=`${(item.entities.meta.fileid && item.entities.meta.fileid.length > 2) ? item.entities.meta.fileid : ''}` data-msg-manage=`${(thisImageManage) ? 'true' : 'false'}` data-msg-bodyraw=`${(item.content.raw && item.content.raw.length > 0) ? item.content.raw.split("\n").join('<br/>') : ''}`)
                        .episode-preview
                            .preview-watched.d-flex
                                .watched-precent.mt-auto(style=`width: ${(item.media.watched !== null) ? item.media.watched * 100 : 0}%`)
                            .preview-controls.d-flex
                                .play-icon.mt-auto.mb-auto.mr-auto.ml-auto.shadow-text
                                    i.fas.fa-play
                            a(href='#_' onclick=`openKMSPlayer("${item.id}", "${item.media.show.meta.id}"); return false;`)
                                #postImage.episode-preview-image(style=`background-image : url(${(item.entities.ext_preview) ? item.entities.ext_preview : item.entities.full});`)
                        .episode-body
                            .episode-number.position-absolute
                                span #{indexImage + 1}
                            .episode-name.px-2
                                if (item.entities.filename)
                                    span #{(item.entities.filename.split(" - ").length > 1) ? item.entities.filename.split(" - ")[1] : item.entities.filename}
                            .episode-description.px-2

                            .episode-controls.px-2.pt-2
                                if (user && user.source < 900)
                                    a.btn.btn-links.no-dynamic-tiny(data-placement="top" id='fav-' + item.eid title="Toggle Favorite" href='#_' onclick=`toggleFavorite("${item.channel.id}", "${item.eid}"); return false;`)
                                        i.btn-links.fas.fa-star(class=`${(item.pinned) ? 'favorited' : ''}`)
                                a.btn.btn-links.no-dynamic-tiny(data-placement="top" title=`Add or Remove from Album` href='#_' onclick=`refreshAlbumsList("${item.eid}"); return false;`)
                                    i.btn-links.fas.fa-archive
                                a.btn.btn-links.goto-link(data-placement="top" title=`Search content related to this image` href='#_' onClick=`showSearchOptions('${item.id}', ${(thisImageManage && user && user.source < 900)}); return false;`)
                                    i.btn-links.fas.fa-info-circle
    else

        style.
            .background-image:not(.overlay) {
                background-image: url('/static/img/loading_bg.jpg');
            }
        .alert.alert-danger(role='alert')
            h4.alert-heading No Results
            p
                | Your search query or requested channel is either invalid or does not contain any gallery content
            hr
            p.mb-0
                | Please go back to a valid channel or retry your search with another (maybe less specific) query

